Project 1: Compute the frequencies of characters in a given input file.
 (Ignore all tabs, spaces and line returns)	     

Please note: 
(1) You may NOT hard code the input and output file names in your program,
	you will get -2 pts for doing so!!!

(2) Your on-line submission MUST follow the on-line submission specs, including the subject heading in your email submission and the name of your Java/C++ code.

(3) Your hard copy submission MUST follow the hard copy submission specs.

 
**************************************
Language:  C++ & Java
Due date:  Java soft copy:  9/3/2018 Monday before Midnight
		C++ soft copy :  9/5/2017 Wednesday before Midnight		   
		C++ and Java hard copy: 9/6/2017 Thursday in class

*************************************

I. Input: a txt file (use argv[])
	
	
II. Output: a txt file (use argv[]) with the following format:

(Do not print any charactors that have zero count.)
   
	char1  # count
	char2  # count
	char3  # count
	char4  # count
	:
	:
	:
	
*******************************
III. Data structure:
*******************************
	- charIn (char)
	- index
	- charCounts[256] a 1D array where 256 is max number of different ascii characters.
	
   	- printAry 
	
*******************************
VI. Algorithm for counting
*******************************
  
step 0: - open input and output files
	   - initialize charCounts array to zero.
	   
step 1: charIn <- get the next character from inFile, one character at a time

step 2: index <- cast charIn to integer

step 3: charCounts[index]++

step 4: repeat step 1 to step 3 while infile is not empty

step 5: printAry // see algorithm below

step 6: close all files

*******************************
VII. Algorithm for printAry
*******************************
  
step 1: index <--0

step 2: if charCounts[index] > 0
           symbol <-- cast index to charactor
           write symbol  charCounts[index]  per text line

step 3: index ++

step 4: repeat step 2 to step 3 while i < 256


